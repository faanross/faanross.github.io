<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on faan|ross</title>
    <link>https://athul.github.io/archie/posts/</link>
    <description>Recent content in Posts on faan|ross</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>| hack the planet</copyright>
    <lastBuildDate>Wed, 12 Jul 2023 02:01:58 +0530</lastBuildDate><atom:link href="https://athul.github.io/archie/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Threat Hunting Dll-injected C2 beacons</title>
      <link>https://athul.github.io/archie/posts/post-1/</link>
      <pubDate>Wed, 12 Jul 2023 02:01:58 +0530</pubDate>
      
      <guid>https://athul.github.io/archie/posts/post-1/</guid>
      <description>Introduction In this course we&amp;rsquo;ll learn how to threat hunt both classical and reflective DLL-injected C2 implants. We&amp;rsquo;ll do so from 3 approaches: memory forensics, log analysis + UEBA, and traffic analysis. The entire course is practically-oriented, meaning that we&amp;rsquo;ll learn by doing. I&amp;rsquo;ll sprinkle in a tiny bit of theory just so we are on the same page re: C2 frameworks and DLL-injection attacks; and in case you wanted to dig in deeper I provide extensive references throughout this document.</description>
    </item>
    
  </channel>
</rss>
